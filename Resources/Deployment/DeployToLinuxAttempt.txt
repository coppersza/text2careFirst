Deploy to Linux using Docker - for use with .Net 5.0
====================================================

1. Create a new droplet with Digital Ocean using the Docker 19.03.12 on Ubuntu 20.04
text2careDroplet
IP address: 178.62.53.238
Password for root user: M@rio13Bros
ssh root@178.62.53.238
adduser text2care
M@rio13Bros
usermod -aG sudo text2care

ssh text2care@178.62.53.238
M@rio13Bros

2. Install Redis
sudo apt update
sudo apt install redis-server
sudo nano /etc/redis/redis.conf
# Note: these supervision methods only signal "process is ready."
#       They do not enable continuous liveness pings back to your supervisor.
supervised systemd
sudo systemctl restart redis.service

3. Install PostGres
sudo apt install postgresql postgresql-contrib
sudo systemctl start postgresql.service
sudo -i -u postgres
createuser --interactive
text2care
M@rio13Bros
exit
service postgresql status
sudo -u postgres psql

sudo -i -u postgres
psql
\password postgres
M@rio13Bros
\password text2care
M@rio13Bros
\password rootuser
M@rio13Bros
\conninfo


4.  Install and configure apache by running the following commands:
sudo apt update
sudo apt install apache2
sudo a2enmod proxy proxy_http proxy_html rewrite
systemctl restart apache2
sudo ufw app list
sudo ufw allow 'Apache Full'
sudo systemctl status apache2
http://178.62.53.238

5.  Create a new directory that will contain our published dotnet app and assign rights to the user:

sudo mkdir /var/text2care
sudo chown -R $USER:$USER /var/text2care

6.  Create a new config file for the text2care app:

sudo nano /etc/apache2/sites-available/text2care.conf

7.  Paste in the following configuration which will set up a reverse proxy with the Kestrel server:

<VirtualHost *:80>
    ServerAdmin text2care@localhost
    ProxyPreserveHost On
    ProxyPass / http://127.0.0.1:5000/
    ProxyPassReverse / http://127.0.0.1:5000
    ErrorLog ${APACHE_LOG_DIR}/error.log
    CustomLog ${APACHE_LOG_DIR}/access.log combined
</VirtualHost>

8.  Enable the text2care site by running the following commands:

sudo a2ensite text2care
ls /etc/apache2/sites-enabled
sudo a2dissite 000-default
sudo systemctl reload apache2

sudo reboot
ssh root@178.62.53.238
M@rio13Bros
9. Allow sftp connections for deploy
sudo apt install ssh
-Paste at bottom of file
Match group sftp
ChrootDirectory /home
X11Forwarding no
AllowTcpForwarding no
ForceCommand internal-sftp

sudo systemctl restart ssh
sudo addgroup sftp
sudo useradd -m sftp_user -g sftp
sudo useradd -m text2care -g sftp
sudo useradd -m root -g sftp
sudo passwd sftp_user
sudo passwd text2care
M@rio13Bros

sudo chmod 700 /home/text2care/
sudo chmod 700 /var/text2care/

16.  Deploy the files by using the command pallette -> deploy reloaded -> deploy package

17.  Add an endpoint to stripe for to point to the IP address of the server and select the 2 events we want to listen to:  payment_intent.succeeded, payment_intent.payment_failed.  Note the web hook secret as we will need this soon.

http://178.62.53.238/api/payments/webhook

18.  Back on the linux server create a service config for the kestrel server:

sudo nano /etc/systemd/system/text2care-web.service


19.  Update the configuration for your API keys where it says REPLACEME and then paste the config into the nano editor

[Unit]
Description=Kestrel service running on Ubuntu 20.04
[Service]
WorkingDirectory=/var/text2care
ExecStart=/usr/bin/dotnet /var/text2care/API.dll
Restart=always
RestartSec=10
SyslogIdentifier=text2care
User=www-data
Environment=ASPNETCORE_ENVIRONMENT=Production
Environment='Token__Key=super secret key'
Environment='Token__Issuer=http://178.62.53.238'
Environment='StripeSettings__PublishibleKey=pk_test_51LZYe2CscCsr6cFbtilkcSSD5vEWMetppMmtSdvGDEpy9ClY7j0UkgxT8ERrAMxdmGH1NRnD3iRPhZ07rdb0Hboi00dvc9AcdW'
Environment='StripeSettings__SecretKey=sk_test_51LZYe2CscCsr6cFbpn6JwHJ2LcRtmcezqlhnttIa8i0rRLbniMp9VRlmvcsgOqkSULO7g1M0IbB4VVJ7zoDurAc2001Vil2vLt'
Environment='StripeSettings__WhSecret=whsec_z2kPGxIEmAA5YxxgXTnezfhMwEpqbXdc'
Environment='ConnectionStrings__DefaultConnection=Server=localhost;Port=5432;User Id=rootuser;Password=Mario13Bros; Database=text2care'
Environment='ConnectionStrings__IdentityConnection=Server=localhost;Port=5432;User Id=rootuser;Password=Mario13Bros; Database=identity'
Environment='ConnectionStrings__Redis=localhost'
Environment='ApiUrl=http://178.62.53.238/Content/'
[Install]
WantedBy=multi-user.target

20.  Install the .Net runtime using the instructions here:  
sudo apt-get update; \
  sudo apt-get install -y apt-transport-https && \
  sudo apt-get update && \
  sudo apt-get install -y aspnetcore-runtime-6.0 


2.  Install and configure Homebrew by running the following commands:
sudo apt update
sudo apt-get install build-essential
sudo apt install git -y
sudo /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
/bin/bash install.sh

echo '# Set PATH, MANPATH, etc., for Homebrew.' >> /home/text2care/.profile
echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> /home/text2care/.profile
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
sudo apt-get install build-essential

3. Install Redis
brew install redis

3. Install PostGres
sudo apt install postgresql postgresql-contrib
sudo -i -u postgres
createuser --interactive
rootuser
sudo adduser rootuser
sudo -i -u rootuser
psql


sudo -i -u text2care
sudo -u postgres psql

sudo -i -u postgres




6.  Install and configure apache by running the following commands:

sudo apt update
sudo apt install apache2
a2enmod proxy proxy_http proxy_html rewrite
systemctl restart apache2
sudo ufw app list
sudo ufw allow 'Apache Full'
sudo systemctl status apache2